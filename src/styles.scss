@use "./variables.scss";
@use "../node_modules/bulma/sass/components/navbar.scss" with (
  $navbar-breakpoint: 690px
);

@use "../node_modules/bulma/sass/utilities/initial-variables" as iv;
@use "../node_modules/bulma/sass/utilities/css-variables" as cv;
@use "../node_modules/bulma/sass/" as bulma;

@use "../node_modules/bulma-slider/src/sass/" as bulma-slider;
@use "../node_modules/bulma-switch/src/sass" as bulma-switch;
@use "../node_modules/bulma-v1-tooltip/src/sass/" as bulma-tooltip;

@import "../node_modules/maplibre-gl/dist/maplibre-gl.css";

html {
  // override bulma's default behavior
  overflow-y: auto;
}

.is-user-select-none {
  user-select: none;
}

.is-fullwidth {
  width: 100%;
  max-width: 100%;
}

.is-fullheight {
  height: 100%;
  max-height: 100%;
}

.no-main-padding {
  margin: calc(var(--bulma-column-gap) * -1);

  &.is-fullheight {
    $height: calc(100% + 2 * var(--bulma-column-gap));
    height: $height;
    max-height: $height;
  }
}

.maplibregl-map {
  // avoid inherited colors from outer components for the map
  color: bulma.$text;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
  }
}

/* 
 * .is-spinning
 * Adds a continuous spin animation to an element.
 * - Base: spins every 0.8s (infinite loop).
 * - .is-fast: speeds up spin to 0.2s.
 * - .is-slow: slows spin to 2s.
 * Perfect for loaders or rotating icons.
 */
.is-spinning {
  display: grid;
  animation: spin 0.8s linear infinite;

  &.is-fast {
    animation-duration: 0.2s;
  }

  &.is-slow {
    animation-duration: 2s;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

/* 
 * .has-stack
 * Creates a stacking layout where all direct children overlap.
 * - Uses a single-cell grid (grid-area: 1 / 1).
 * - All children are placed in the same cell, stacking visually.
 * Great for layering images, text, or overlays in one spot.
 */
.has-stack {
  display: grid;

  > * {
    grid-area: 1 / 1;
  }
}

// Border-only color for messages
@each $name, $components in bulma.$message-colors {
  .#{iv.$class-prefix}message.#{iv.$class-prefix}border-is-#{$name} {
    // Do NOT touch message-h/s/background/text vars here.
    // Only override the body border color directly.
    .#{iv.$class-prefix}message-body {
      border-inline-start-color: hsl(
        #{cv.getVar($name, "", "-h")},
        #{cv.getVar($name, "", "-s")},
        calc(
          #{cv.getVar($name, "", "-l")} + #{cv.getVar("message-border-l-delta")}
        )
      );
    }
  }
}
